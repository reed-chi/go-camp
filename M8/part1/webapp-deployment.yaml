apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp 
  labels:
	app.kubernetes.io/instance: webapp
	role: bknd-project
spec:
  replicas: 1
  minReadySeconds: 30
  progressDeadlineSeconds: 60
  revisionHistoryLimit: 5
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
        app.kubernetes.io/instance: webapp
        role: bknd-project
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: webapp
        role: bknd-project
    spec:
      imagePullSecrets:
        - name: registry-cred     
      containers:
      - name: webapp 
        image: "registry.cn-beijing.aliyuncs.com/lib/webapp:1.0.1"
        command: ["/webapp"]
        ports:
        - name: http
          containerPort: 8080 
        env:
          - name: aliyun_logs_webapp
            value: "stdout"
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080 
            scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080 
            scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
        startupProbe:
          httpGet:
            path: /ping
            port: 8080 
            scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3             
        resources:
            limits:
              cpu: '500m'
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 1Gi          
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /data
          name: volume-alicloud-nas-pvc
      volumes:
      - name: volume-alicloud-nas-pvc
        persistentVolumeClaim:
          claimName: alicloud-nas-pvc
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
